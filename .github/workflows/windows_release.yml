name: windows_release

on:
  push:
    branches:
      - 'master'
      - 'continuous-integration'
    tags:
      - 'v*'

  pull_request:
    branches:
      - 'master'
      - 'continuous-integration'

defaults:
  run:
    shell: cmd

env:
  SOURCE_DIR: ${{ github.workspace }}
  QT_VERSION: 5.15.2
  ARTIFACT:   qt-planets-build.zip

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: (1) Checkout repo
        uses: actions/checkout@v2
        with:  
          submodules: recursive

      - name: (2) Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version:    ${{ env.QT_VERSION }}
          host:       windows
          target:     desktop
          arch:       win64_msvc2019_64
          dir:        ${{ runner.temp }}
          modules:    qtcharts qt3d
          setup-python: false

      - name: (3) Download JOM
        uses: suisei-cn/actions-download-file@v1
        with:
          url: http://download.qt.io/official_releases/jom/jom.zip
          target: ${{ runner.temp }}

      - name: (4) Unzip JOM
        working-directory: ${{ runner.temp }}
        run: |
          7z x jom.zip -ojom

      - name: (5) Create build directory
        run: mkdir ${{ runner.temp }}/build

      - name: (6) Setup Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: (7) Build
        working-directory: ${{ runner.temp }}/build
        run: |
          qmake -r ${{ env.SOURCE_DIR }}\planets-qml.pro
          ${{ runner.temp }}/jom/jom -j2
          cd release
          windeployqt --qmldir ${{ env.SOURCE_DIR }} planets-qml.exe --pdb --release --compiler-runtime
          copy C:\Windows\System32\concrt140.dll . 
          copy C:\Windows\System32\vccorlib140.dll .
          copy C:\Windows\System32\msvcp140.dll .
          copy C:\Windows\System32\vcruntime140.dll .

      - name: (8) Zip build
        working-directory: ${{ runner.temp }}
        run: |
          7z a qt-planets-build.zip ${{ runner.temp }}\build\* -r

      - name: (9) Save build artifact
        uses: actions/upload-artifact@master
        with:
            name: ${{ env.ARTIFACT }}
            path: ${{ runner.temp }}\${{ env.ARTIFACT }}